{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.19.5.34762",
      "templateHash": "346738160867488250"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The Geo-location where the resource lives"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": "[resourceGroup().tags]",
      "metadata": {
        "description": "Tags for resource"
      }
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "Name of existing sql server to set as parent for database"
      }
    },
    "version": {
      "type": "string",
      "defaultValue": "12.0",
      "metadata": {
        "description": "Sql server version"
      }
    },
    "virtualNetworkRules": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. The virtual network rules to create in the server."
      }
    },
    "privateEndpoints": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Configuration details for private endpoints. For security reasons, it is recommended to use private endpoints whenever possible."
      }
    },
    "firewallRules": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. The firewall rules to create in the server."
      }
    },
    "publicNetworkAccess": {
      "type": "string",
      "defaultValue": "Enabled",
      "metadata": {
        "description": "Whether or not public endpoint access is allowed for this server. Default Enabled"
      },
      "allowedValues": [
        "Disabled",
        "Enabled"
      ]
    },
    "administratorLogin": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Conditional. The administrator username for the server. Required if no `administrators` object for AAD authentication is provided.Can be the login name and object id of an Azure AD security group"
      }
    },
    "administrators": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Conditional. The Azure Active Directory (AAD) administrator authentication. Required if no `administratorLogin` & `administratorLoginPassword` is provided."
      }
    },
    "administratorLoginPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Conditional. The administrator login password. Required if no `administrators` object for AAD authentication is provided. "
      }
    },
    "azureADonlyAuthentication": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Only allow authentication to sql server using Azure AD"
      }
    },
    "systemAssignedIdentity": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Enables system assigned managed identity on the resource."
      }
    },
    "userAssignedIdentities": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. The ID(s) to assign to the resource."
      }
    },
    "primaryUserAssignedIdentityId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Conditional. The resource ID of a user assigned identity to be used by default. Required if \"userAssignedIdentities\" is not empty."
      }
    }
  },
  "variables": {
    "identityType": "[if(parameters('systemAssignedIdentity'), if(not(empty(parameters('userAssignedIdentities'))), 'SystemAssigned,UserAssigned', 'SystemAssigned'), if(not(empty(parameters('userAssignedIdentities'))), 'UserAssigned', 'None'))]",
    "_identity": "[if(not(equals(variables('identityType'), 'None')), createObject('type', variables('identityType'), 'userAssignedIdentities', if(not(empty(parameters('userAssignedIdentities'))), parameters('userAssignedIdentities'), null())), null())]"
  },
  "resources": [
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2021-11-01",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "identity": "[variables('_identity')]",
      "properties": {
        "administratorLogin": "[if(not(empty(parameters('administratorLogin'))), parameters('administratorLogin'), null())]",
        "administratorLoginPassword": "[if(not(empty(parameters('administratorLoginPassword'))), parameters('administratorLoginPassword'), null())]",
        "administrators": "[if(not(empty(parameters('administrators'))), createObject('administratorType', 'ActiveDirectory', 'azureADOnlyAuthentication', parameters('azureADonlyAuthentication'), 'login', parameters('administrators').loginName, 'principalType', 'Group', 'sid', parameters('administrators').objectId, 'tenantId', tenant().tenantId), null())]",
        "minimalTlsVersion": "1.2",
        "version": "[parameters('version')]",
        "primaryUserAssignedIdentityId": "[if(not(empty(parameters('primaryUserAssignedIdentityId'))), parameters('primaryUserAssignedIdentityId'), null())]",
        "publicNetworkAccess": "[if(not(empty(parameters('publicNetworkAccess'))), parameters('publicNetworkAccess'), if(and(and(not(empty(parameters('privateEndpoints'))), empty(parameters('firewallRules'))), empty(parameters('virtualNetworkRules'))), 'Disabled', null()))]"
      }
    }
  ],
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "resource output"
      },
      "value": "[parameters('name')]"
    },
    "id": {
      "type": "string",
      "value": "[resourceId('Microsoft.Sql/servers', parameters('name'))]"
    }
  }
}